
./func_ptr_asm:     file format elf64-x86-64
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000001080

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000318  0000000000000318  00000318  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.property 00000020  0000000000000338  0000000000000338  00000338  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000358  0000000000000358  00000358  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .note.ABI-tag 00000020  000000000000037c  000000000000037c  0000037c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .gnu.hash     00000024  00000000000003a0  00000000000003a0  000003a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynsym       000000f0  00000000000003c8  00000000000003c8  000003c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .dynstr       000000a2  00000000000004b8  00000000000004b8  000004b8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version  00000014  000000000000055a  000000000000055a  0000055a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .gnu.version_r 00000030  0000000000000570  0000000000000570  00000570  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.dyn     000000c0  00000000000005a0  00000000000005a0  000005a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .rela.plt     00000060  0000000000000660  0000000000000660  00000660  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .init         0000001b  0000000000001000  0000000000001000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt          00000050  0000000000001020  0000000000001020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .plt.got      00000008  0000000000001070  0000000000001070  00001070  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text         0000022b  0000000000001080  0000000000001080  00001080  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .fini         0000000d  00000000000012ac  00000000000012ac  000012ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .rodata       00000004  0000000000002000  0000000000002000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .string       00000012  0000000000002004  0000000000002004  00002004  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .eh_frame_hdr 00000024  0000000000002018  0000000000002018  00002018  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .eh_frame     00000070  0000000000002040  0000000000002040  00002040  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 .init_array   00000008  0000000000003da0  0000000000003da0  00002da0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .fini_array   00000008  0000000000003da8  0000000000003da8  00002da8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .dynamic      000001f0  0000000000003db0  0000000000003db0  00002db0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got          00000060  0000000000003fa0  0000000000003fa0  00002fa0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         0000002c  0000000000004000  0000000000004000  00003000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          00000004  000000000000402c  000000000000402c  0000302c  2**0
                  ALLOC
 26 .comment      00000026  0000000000000000  0000000000000000  0000302c  2**0
                  CONTENTS, READONLY
 27 .debug_aranges 00000060  0000000000000000  0000000000000000  00003060  2**4
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_info   00000051  0000000000000000  0000000000000000  000030c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_abbrev 00000028  0000000000000000  0000000000000000  00003111  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_line   000000df  0000000000000000  0000000000000000  00003139  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 31 .debug_str    00000093  0000000000000000  0000000000000000  00003218  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_line_str 00000087  0000000000000000  0000000000000000  000032ab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <putchar@plt-0x10>:
    1020:	ff 35 82 2f 00 00    	push   0x2f82(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 84 2f 00 00    	jmp    *0x2f84(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <putchar@plt>:
    1030:	ff 25 82 2f 00 00    	jmp    *0x2f82(%rip)        # 3fb8 <putchar@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <printf@plt>:
    1040:	ff 25 7a 2f 00 00    	jmp    *0x2f7a(%rip)        # 3fc0 <printf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <scanf@plt>:
    1050:	ff 25 72 2f 00 00    	jmp    *0x2f72(%rip)        # 3fc8 <scanf@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <exit@plt>:
    1060:	ff 25 6a 2f 00 00    	jmp    *0x2f6a(%rip)        # 3fd0 <exit@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	ff 25 82 2f 00 00    	jmp    *0x2f82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1076:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	f3 0f 1e fa          	endbr64
    1084:	31 ed                	xor    %ebp,%ebp
    1086:	49 89 d1             	mov    %rdx,%r9
    1089:	5e                   	pop    %rsi
    108a:	48 89 e2             	mov    %rsp,%rdx
    108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1091:	50                   	push   %rax
    1092:	54                   	push   %rsp
    1093:	45 31 c0             	xor    %r8d,%r8d
    1096:	31 c9                	xor    %ecx,%ecx
    1098:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 1169 <main>
    109f:	ff 15 33 2f 00 00    	call   *0x2f33(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10a5:	f4                   	hlt
    10a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10ad:	00 00 00 

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4030 <__TMC_END__>
    10b7:	48 8d 05 72 2f 00 00 	lea    0x2f72(%rip),%rax        # 4030 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 16 2f 00 00 	mov    0x2f16(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmp    *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	ret
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 49 2f 00 00 	lea    0x2f49(%rip),%rdi        # 4030 <__TMC_END__>
    10e7:	48 8d 35 42 2f 00 00 	lea    0x2f42(%rip),%rsi        # 4030 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 89 f0             	mov    %rsi,%rax
    10f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10f8:	48 c1 f8 03          	sar    $0x3,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    $1,%rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmp    *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	ret
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	f3 0f 1e fa          	endbr64
    1124:	80 3d 01 2f 00 00 00 	cmpb   $0x0,0x2f01(%rip)        # 402c <completed.0>
    112b:	75 2b                	jne    1158 <__do_global_dtors_aux+0x38>
    112d:	55                   	push   %rbp
    112e:	48 83 3d c2 2e 00 00 	cmpq   $0x0,0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1135:	00 
    1136:	48 89 e5             	mov    %rsp,%rbp
    1139:	74 0c                	je     1147 <__do_global_dtors_aux+0x27>
    113b:	48 8b 3d c6 2e 00 00 	mov    0x2ec6(%rip),%rdi        # 4008 <__dso_handle>
    1142:	e8 29 ff ff ff       	call   1070 <__cxa_finalize@plt>
    1147:	e8 64 ff ff ff       	call   10b0 <deregister_tm_clones>
    114c:	c6 05 d9 2e 00 00 01 	movb   $0x1,0x2ed9(%rip)        # 402c <completed.0>
    1153:	5d                   	pop    %rbp
    1154:	c3                   	ret
    1155:	0f 1f 00             	nopl   (%rax)
    1158:	c3                   	ret
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	f3 0f 1e fa          	endbr64
    1164:	e9 77 ff ff ff       	jmp    10e0 <register_tm_clones>

0000000000001169 <main>:
    1169:	4c 8d 25 a0 2e 00 00 	lea    0x2ea0(%rip),%r12        # 4010 <operations>
    1170:	4c 8d 2d 4b 00 00 00 	lea    0x4b(%rip),%r13        # 11c2 <my_inc>
    1177:	4d 89 2c 24          	mov    %r13,(%r12)
    117b:	4c 8d 2d 47 00 00 00 	lea    0x47(%rip),%r13        # 11c9 <my_dec>
    1182:	4d 89 6c 24 08       	mov    %r13,0x8(%r12)
    1187:	4c 8d 2d 42 00 00 00 	lea    0x42(%rip),%r13        # 11d0 <my_show>
    118e:	4d 89 6c 24 10       	mov    %r13,0x10(%r12)
    1193:	49 c7 c7 00 00 00 00 	mov    $0x0,%r15
    119a:	4f 8b 34 fc          	mov    (%r12,%r15,8),%r14
    119e:	48 8b 3d 83 2e 00 00 	mov    0x2e83(%rip),%rdi        # 4028 <val>
    11a5:	41 ff d6             	call   *%r14
    11a8:	49 c7 c7 02 00 00 00 	mov    $0x2,%r15
    11af:	4f 8b 34 fc          	mov    (%r12,%r15,8),%r14
    11b3:	48 8b 3d 6e 2e 00 00 	mov    0x2e6e(%rip),%rdi        # 4028 <val>
    11ba:	41 ff d6             	call   *%r14
    11bd:	e8 6e 00 00 00       	call   1230 <finish>

00000000000011c2 <my_inc>:
    11c2:	48 ff c7             	inc    %rdi
    11c5:	48 89 f8             	mov    %rdi,%rax
    11c8:	c3                   	ret

00000000000011c9 <my_dec>:
    11c9:	48 ff cf             	dec    %rdi
    11cc:	48 89 f8             	mov    %rdi,%rax
    11cf:	c3                   	ret

00000000000011d0 <my_show>:
    11d0:	e8 bb 00 00 00       	call   1290 <writei64>
    11d5:	c3                   	ret
    11d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    11dd:	00 00 00 

00000000000011e0 <readi32>:
    11e0:	55                   	push   %rbp
    11e1:	48 89 e5             	mov    %rsp,%rbp
    11e4:	48 83 ec 04          	sub    $0x4,%rsp
    11e8:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    11ec:	31 c0                	xor    %eax,%eax
    11ee:	48 8d 3d 0f 0e 00 00 	lea    0xe0f(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    11f5:	48 89 e6             	mov    %rsp,%rsi
    11f8:	e8 53 fe ff ff       	call   1050 <scanf@plt>
    11fd:	89 c1                	mov    %eax,%ecx
    11ff:	8b 04 24             	mov    (%rsp),%eax
    1202:	f8                   	clc
    1203:	83 f9 01             	cmp    $0x1,%ecx
    1206:	74 01                	je     1209 <readi32+0x29>
    1208:	f9                   	stc
    1209:	c9                   	leave
    120a:	c3                   	ret
    120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001210 <writei32>:
    1210:	55                   	push   %rbp
    1211:	48 89 e5             	mov    %rsp,%rbp
    1214:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1218:	89 fe                	mov    %edi,%esi
    121a:	31 c0                	xor    %eax,%eax
    121c:	48 8d 3d e4 0d 00 00 	lea    0xde4(%rip),%rdi        # 2007 <_IO_stdin_used+0x7>
    1223:	e8 18 fe ff ff       	call   1040 <printf@plt>
    1228:	c9                   	leave
    1229:	c3                   	ret
    122a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001230 <finish>:
    1230:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1234:	31 ff                	xor    %edi,%edi
    1236:	e8 25 fe ff ff       	call   1060 <exit@plt>
    123b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001240 <nl>:
    1240:	55                   	push   %rbp
    1241:	48 89 e5             	mov    %rsp,%rbp
    1244:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1248:	bf 0a 00 00 00       	mov    $0xa,%edi
    124d:	e8 de fd ff ff       	call   1030 <putchar@plt>
    1252:	c9                   	leave
    1253:	c3                   	ret
    1254:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    125b:	00 00 00 00 
    125f:	90                   	nop

0000000000001260 <readi64>:
    1260:	55                   	push   %rbp
    1261:	48 89 e5             	mov    %rsp,%rbp
    1264:	48 83 ec 08          	sub    $0x8,%rsp
    1268:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    126c:	48 8d 3d 98 0d 00 00 	lea    0xd98(%rip),%rdi        # 200b <_IO_stdin_used+0xb>
    1273:	48 89 e6             	mov    %rsp,%rsi
    1276:	e8 d5 fd ff ff       	call   1050 <scanf@plt>
    127b:	89 c1                	mov    %eax,%ecx
    127d:	48 8b 04 24          	mov    (%rsp),%rax
    1281:	f8                   	clc
    1282:	83 f9 01             	cmp    $0x1,%ecx
    1285:	74 01                	je     1288 <readi64+0x28>
    1287:	f9                   	stc
    1288:	c9                   	leave
    1289:	c3                   	ret
    128a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001290 <writei64>:
    1290:	55                   	push   %rbp
    1291:	48 89 e5             	mov    %rsp,%rbp
    1294:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1298:	48 89 fe             	mov    %rdi,%rsi
    129b:	31 c0                	xor    %eax,%eax
    129d:	48 8d 3d 6c 0d 00 00 	lea    0xd6c(%rip),%rdi        # 2010 <_IO_stdin_used+0x10>
    12a4:	e8 97 fd ff ff       	call   1040 <printf@plt>
    12a9:	c9                   	leave
    12aa:	c3                   	ret

Disassembly of section .fini:

00000000000012ac <_fini>:
    12ac:	f3 0f 1e fa          	endbr64
    12b0:	48 83 ec 08          	sub    $0x8,%rsp
    12b4:	48 83 c4 08          	add    $0x8,%rsp
    12b8:	c3                   	ret
